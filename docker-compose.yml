services:
  mysql-container:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ittaeok
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s

  redis-container:
    image: redis:8.0.3
    container_name: redis-container
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 3s
      retries: 5
      interval: 10s
      start_period: 30s

  ittaeok-container:
    image: ${DOCKER_IMAGES_NAME}
    container_name: ittaeok
    restart: always
    depends_on:
      mysql-container:
        condition: service_healthy
      redis-container:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    environment:
      # Database
      - DB_URL=${DB_URL}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

      # Redis
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}

      # JWT
      - JWT_SECRET=${JWT_SECRET}

      # Google
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OAUTH_REDIRECT_URI=${OAUTH_REDIRECT_URI}
      - GOOGLE_CALENDAR_REDIRECT_URI=${GOOGLE_CALENDAR_REDIRECT_URI}

      # Kakao
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - KAKAO_API_KEY=${KAKAO_API_KEY}

      # Zoom
      - ZOOM_ACCOUNT_ID=${ZOOM_ACCOUNT_ID}
      - ZOOM_CLIENT_ID=${ZOOM_CLIENT_ID}
      - ZOOM_CLIENT_SECRET=${ZOOM_CLIENT_SECRET}

      # URL
      - GCP_IP=${GCP_IP}
      - FRONT_DOMAIN_A=${FRONT_DOMAIN_A}
      - FRONT_DOMAIN_B=${FRONT_DOMAIN_B}
      - FRONT_CALLBACK=${FRONT_CALLBACK}
    volumes:
      - ./gcp-key.json:/app/gcp-key.json:ro
    networks:
      - app-network

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.19.3
    container_name: filebeat
    user: root
    restart: always
    volumes:
      # Filebeat 설정 파일
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro

      # Docker 로그 파일 경로 (수집용)
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - app-network
    depends_on:
      - ittaeok-container

volumes:
  mysql_data:
  redis_data:

networks:
  app-network:
    driver: bridge